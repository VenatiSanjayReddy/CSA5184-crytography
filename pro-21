from cryptography.hazmat.backends import default_backend
import base64

def encrypt_ecb_3des(key, plaintext):
    backend = default_backend()
    cipher = Cipher(algorithms.TripleDES(key), modes.ECB(), backend=backend)
    encryptor = cipher.encryptor()

    padder = padding.PKCS7(64).padder()
    padded_plaintext = padder.update(plaintext) + padder.finalize()

    ciphertext = encryptor.update(padded_plaintext) + encryptor.finalize()
    return ciphertext

def decrypt_ecb_3des(key, ciphertext):
    backend = default_backend()
    cipher = Cipher(algorithms.TripleDES(key), modes.ECB(), backend=backend)
    decryptor = cipher.decryptor()

    padded_plaintext = decryptor.update(ciphertext) + decryptor.finalize()
    unpadder = padding.PKCS7(64).unpadder()
    plaintext = unpadder.update(padded_plaintext) + unpadder.finalize()
    return plaintext

def main():
    # 3DES key (24 bytes)
    key = b'your24bytestdeskeyhere'

    plaintext = b'This is a secret message.'

    # ECB mode
    ciphertext_ecb = encrypt_ecb_3des(key, plaintext)
    decrypted_plaintext_ecb = decrypt_ecb_3des(key, ciphertext_ecb)
    print("ECB Mode:")
    print("Ciphertext:", base64.b64encode(ciphertext_ecb).decode('utf-8'))
    print("Decrypted Plaintext:", decrypted_plaintext_ecb.decode('utf-8'))

if __name__ == "__main__":
    main()
